/*
 * DAVE GEODATA EAI
 * DAVE GEODATA EAI - Service zum Abfragen von Geoinformationen
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: unbekannt@muenchen.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.muenchen.dave.geodateneai.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import de.muenchen.dave.geodateneai.gen.model.MessquerschnittDto;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.List;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MessstelleDto
 */
@JsonPropertyOrder({
  MessstelleDto.JSON_PROPERTY_MST_ID,
  MessstelleDto.JSON_PROPERTY_NAME,
  MessstelleDto.JSON_PROPERTY_STATUS,
  MessstelleDto.JSON_PROPERTY_REALISIERUNGSDATUM,
  MessstelleDto.JSON_PROPERTY_ABBAUDATUM,
  MessstelleDto.JSON_PROPERTY_STADTBEZIRK_NUMMER,
  MessstelleDto.JSON_PROPERTY_BEMERKUNG,
  MessstelleDto.JSON_PROPERTY_DATUM_LETZTE_PLAUSIBLE_MESSUNG,
  MessstelleDto.JSON_PROPERTY_MESSQUERSCHNITTE,
  MessstelleDto.JSON_PROPERTY_XCOORDINATE,
  MessstelleDto.JSON_PROPERTY_YCOORDINATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MessstelleDto {
  public static final String JSON_PROPERTY_MST_ID = "mstId";
  private String mstId;

  public static final String JSON_PROPERTY_NAME = "name";
  private String name;

  /**
   * Gets or Sets status
   */
  public enum StatusEnum {
    IN_PLANUNG("IN_PLANUNG"),
    
    IN_BESTAND("IN_BESTAND"),
    
    AUSSER_BETRIEB("AUSSER_BETRIEB"),
    
    ABGEBAUT("ABGEBAUT"),
    
    UNBEKANNT("UNBEKANNT");

    private String value;

    StatusEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static StatusEnum fromValue(String value) {
      for (StatusEnum b : StatusEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_STATUS = "status";
  private StatusEnum status;

  public static final String JSON_PROPERTY_REALISIERUNGSDATUM = "realisierungsdatum";
  private LocalDate realisierungsdatum;

  public static final String JSON_PROPERTY_ABBAUDATUM = "abbaudatum";
  private LocalDate abbaudatum;

  public static final String JSON_PROPERTY_STADTBEZIRK_NUMMER = "stadtbezirkNummer";
  private Integer stadtbezirkNummer;

  public static final String JSON_PROPERTY_BEMERKUNG = "bemerkung";
  private String bemerkung;

  public static final String JSON_PROPERTY_DATUM_LETZTE_PLAUSIBLE_MESSUNG = "datumLetztePlausibleMessung";
  private LocalDate datumLetztePlausibleMessung;

  public static final String JSON_PROPERTY_MESSQUERSCHNITTE = "messquerschnitte";
  private List<MessquerschnittDto> messquerschnitte;

  public static final String JSON_PROPERTY_XCOORDINATE = "xcoordinate";
  private Double xcoordinate;

  public static final String JSON_PROPERTY_YCOORDINATE = "ycoordinate";
  private Double ycoordinate;

  public MessstelleDto() {
  }

  public MessstelleDto mstId(String mstId) {
    
    this.mstId = mstId;
    return this;
  }

   /**
   * Get mstId
   * @return mstId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMstId() {
    return mstId;
  }


  @JsonProperty(JSON_PROPERTY_MST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMstId(String mstId) {
    this.mstId = mstId;
  }


  public MessstelleDto name(String name) {
    
    this.name = name;
    return this;
  }

   /**
   * Get name
   * @return name
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getName() {
    return name;
  }


  @JsonProperty(JSON_PROPERTY_NAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setName(String name) {
    this.name = name;
  }


  public MessstelleDto status(StatusEnum status) {
    
    this.status = status;
    return this;
  }

   /**
   * Get status
   * @return status
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public StatusEnum getStatus() {
    return status;
  }


  @JsonProperty(JSON_PROPERTY_STATUS)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStatus(StatusEnum status) {
    this.status = status;
  }


  public MessstelleDto realisierungsdatum(LocalDate realisierungsdatum) {
    
    this.realisierungsdatum = realisierungsdatum;
    return this;
  }

   /**
   * Get realisierungsdatum
   * @return realisierungsdatum
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_REALISIERUNGSDATUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getRealisierungsdatum() {
    return realisierungsdatum;
  }


  @JsonProperty(JSON_PROPERTY_REALISIERUNGSDATUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setRealisierungsdatum(LocalDate realisierungsdatum) {
    this.realisierungsdatum = realisierungsdatum;
  }


  public MessstelleDto abbaudatum(LocalDate abbaudatum) {
    
    this.abbaudatum = abbaudatum;
    return this;
  }

   /**
   * Get abbaudatum
   * @return abbaudatum
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ABBAUDATUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getAbbaudatum() {
    return abbaudatum;
  }


  @JsonProperty(JSON_PROPERTY_ABBAUDATUM)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAbbaudatum(LocalDate abbaudatum) {
    this.abbaudatum = abbaudatum;
  }


  public MessstelleDto stadtbezirkNummer(Integer stadtbezirkNummer) {
    
    this.stadtbezirkNummer = stadtbezirkNummer;
    return this;
  }

   /**
   * Get stadtbezirkNummer
   * @return stadtbezirkNummer
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STADTBEZIRK_NUMMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getStadtbezirkNummer() {
    return stadtbezirkNummer;
  }


  @JsonProperty(JSON_PROPERTY_STADTBEZIRK_NUMMER)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStadtbezirkNummer(Integer stadtbezirkNummer) {
    this.stadtbezirkNummer = stadtbezirkNummer;
  }


  public MessstelleDto bemerkung(String bemerkung) {
    
    this.bemerkung = bemerkung;
    return this;
  }

   /**
   * Get bemerkung
   * @return bemerkung
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_BEMERKUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getBemerkung() {
    return bemerkung;
  }


  @JsonProperty(JSON_PROPERTY_BEMERKUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setBemerkung(String bemerkung) {
    this.bemerkung = bemerkung;
  }


  public MessstelleDto datumLetztePlausibleMessung(LocalDate datumLetztePlausibleMessung) {
    
    this.datumLetztePlausibleMessung = datumLetztePlausibleMessung;
    return this;
  }

   /**
   * Get datumLetztePlausibleMessung
   * @return datumLetztePlausibleMessung
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_DATUM_LETZTE_PLAUSIBLE_MESSUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public LocalDate getDatumLetztePlausibleMessung() {
    return datumLetztePlausibleMessung;
  }


  @JsonProperty(JSON_PROPERTY_DATUM_LETZTE_PLAUSIBLE_MESSUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setDatumLetztePlausibleMessung(LocalDate datumLetztePlausibleMessung) {
    this.datumLetztePlausibleMessung = datumLetztePlausibleMessung;
  }


  public MessstelleDto messquerschnitte(List<MessquerschnittDto> messquerschnitte) {
    
    this.messquerschnitte = messquerschnitte;
    return this;
  }

  public MessstelleDto addMessquerschnitteItem(MessquerschnittDto messquerschnitteItem) {
    if (this.messquerschnitte == null) {
      this.messquerschnitte = new ArrayList<>();
    }
    this.messquerschnitte.add(messquerschnitteItem);
    return this;
  }

   /**
   * Get messquerschnitte
   * @return messquerschnitte
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MESSQUERSCHNITTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public List<MessquerschnittDto> getMessquerschnitte() {
    return messquerschnitte;
  }


  @JsonProperty(JSON_PROPERTY_MESSQUERSCHNITTE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMessquerschnitte(List<MessquerschnittDto> messquerschnitte) {
    this.messquerschnitte = messquerschnitte;
  }


  public MessstelleDto xcoordinate(Double xcoordinate) {
    
    this.xcoordinate = xcoordinate;
    return this;
  }

   /**
   * Get xcoordinate
   * @return xcoordinate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_XCOORDINATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getXcoordinate() {
    return xcoordinate;
  }


  @JsonProperty(JSON_PROPERTY_XCOORDINATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setXcoordinate(Double xcoordinate) {
    this.xcoordinate = xcoordinate;
  }


  public MessstelleDto ycoordinate(Double ycoordinate) {
    
    this.ycoordinate = ycoordinate;
    return this;
  }

   /**
   * Get ycoordinate
   * @return ycoordinate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YCOORDINATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getYcoordinate() {
    return ycoordinate;
  }


  @JsonProperty(JSON_PROPERTY_YCOORDINATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYcoordinate(Double ycoordinate) {
    this.ycoordinate = ycoordinate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessstelleDto messstelleDto = (MessstelleDto) o;
    return Objects.equals(this.mstId, messstelleDto.mstId) &&
        Objects.equals(this.name, messstelleDto.name) &&
        Objects.equals(this.status, messstelleDto.status) &&
        Objects.equals(this.realisierungsdatum, messstelleDto.realisierungsdatum) &&
        Objects.equals(this.abbaudatum, messstelleDto.abbaudatum) &&
        Objects.equals(this.stadtbezirkNummer, messstelleDto.stadtbezirkNummer) &&
        Objects.equals(this.bemerkung, messstelleDto.bemerkung) &&
        Objects.equals(this.datumLetztePlausibleMessung, messstelleDto.datumLetztePlausibleMessung) &&
        Objects.equals(this.messquerschnitte, messstelleDto.messquerschnitte) &&
        Objects.equals(this.xcoordinate, messstelleDto.xcoordinate) &&
        Objects.equals(this.ycoordinate, messstelleDto.ycoordinate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mstId, name, status, realisierungsdatum, abbaudatum, stadtbezirkNummer, bemerkung, datumLetztePlausibleMessung, messquerschnitte, xcoordinate, ycoordinate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessstelleDto {\n");
    sb.append("    mstId: ").append(toIndentedString(mstId)).append("\n");
    sb.append("    name: ").append(toIndentedString(name)).append("\n");
    sb.append("    status: ").append(toIndentedString(status)).append("\n");
    sb.append("    realisierungsdatum: ").append(toIndentedString(realisierungsdatum)).append("\n");
    sb.append("    abbaudatum: ").append(toIndentedString(abbaudatum)).append("\n");
    sb.append("    stadtbezirkNummer: ").append(toIndentedString(stadtbezirkNummer)).append("\n");
    sb.append("    bemerkung: ").append(toIndentedString(bemerkung)).append("\n");
    sb.append("    datumLetztePlausibleMessung: ").append(toIndentedString(datumLetztePlausibleMessung)).append("\n");
    sb.append("    messquerschnitte: ").append(toIndentedString(messquerschnitte)).append("\n");
    sb.append("    xcoordinate: ").append(toIndentedString(xcoordinate)).append("\n");
    sb.append("    ycoordinate: ").append(toIndentedString(ycoordinate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

