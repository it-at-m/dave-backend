/*
 * DAVE GEODATA EAI
 * DAVE GEODATA EAI - Service zum Abfragen von Geoinformationen
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: unbekannt@muenchen.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.muenchen.dave.geodateneai.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * MessquerschnittDto
 */
@JsonPropertyOrder({
  MessquerschnittDto.JSON_PROPERTY_MQ_ID,
  MessquerschnittDto.JSON_PROPERTY_MST_ID,
  MessquerschnittDto.JSON_PROPERTY_STRASSENNAME,
  MessquerschnittDto.JSON_PROPERTY_LAGE_MESSQUERSCHNITT,
  MessquerschnittDto.JSON_PROPERTY_FAHRTRICHTUNG,
  MessquerschnittDto.JSON_PROPERTY_ANZAHL_FAHRSPUREN,
  MessquerschnittDto.JSON_PROPERTY_ANZAHL_DETEKTOREN,
  MessquerschnittDto.JSON_PROPERTY_XCOORDINATE,
  MessquerschnittDto.JSON_PROPERTY_YCOORDINATE
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class MessquerschnittDto {
  public static final String JSON_PROPERTY_MQ_ID = "mqId";
  private String mqId;

  public static final String JSON_PROPERTY_MST_ID = "mstId";
  private String mstId;

  public static final String JSON_PROPERTY_STRASSENNAME = "strassenname";
  private String strassenname;

  public static final String JSON_PROPERTY_LAGE_MESSQUERSCHNITT = "lageMessquerschnitt";
  private String lageMessquerschnitt;

  public static final String JSON_PROPERTY_FAHRTRICHTUNG = "fahrtrichtung";
  private String fahrtrichtung;

  public static final String JSON_PROPERTY_ANZAHL_FAHRSPUREN = "anzahlFahrspuren";
  private Integer anzahlFahrspuren;

  public static final String JSON_PROPERTY_ANZAHL_DETEKTOREN = "anzahlDetektoren";
  private Integer anzahlDetektoren;

  public static final String JSON_PROPERTY_XCOORDINATE = "xcoordinate";
  private Double xcoordinate;

  public static final String JSON_PROPERTY_YCOORDINATE = "ycoordinate";
  private Double ycoordinate;

  public MessquerschnittDto() {
  }

  public MessquerschnittDto mqId(String mqId) {
    
    this.mqId = mqId;
    return this;
  }

   /**
   * Get mqId
   * @return mqId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MQ_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMqId() {
    return mqId;
  }


  @JsonProperty(JSON_PROPERTY_MQ_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMqId(String mqId) {
    this.mqId = mqId;
  }


  public MessquerschnittDto mstId(String mstId) {
    
    this.mstId = mstId;
    return this;
  }

   /**
   * Get mstId
   * @return mstId
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_MST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getMstId() {
    return mstId;
  }


  @JsonProperty(JSON_PROPERTY_MST_ID)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setMstId(String mstId) {
    this.mstId = mstId;
  }


  public MessquerschnittDto strassenname(String strassenname) {
    
    this.strassenname = strassenname;
    return this;
  }

   /**
   * Get strassenname
   * @return strassenname
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_STRASSENNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getStrassenname() {
    return strassenname;
  }


  @JsonProperty(JSON_PROPERTY_STRASSENNAME)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setStrassenname(String strassenname) {
    this.strassenname = strassenname;
  }


  public MessquerschnittDto lageMessquerschnitt(String lageMessquerschnitt) {
    
    this.lageMessquerschnitt = lageMessquerschnitt;
    return this;
  }

   /**
   * Get lageMessquerschnitt
   * @return lageMessquerschnitt
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_LAGE_MESSQUERSCHNITT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getLageMessquerschnitt() {
    return lageMessquerschnitt;
  }


  @JsonProperty(JSON_PROPERTY_LAGE_MESSQUERSCHNITT)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setLageMessquerschnitt(String lageMessquerschnitt) {
    this.lageMessquerschnitt = lageMessquerschnitt;
  }


  public MessquerschnittDto fahrtrichtung(String fahrtrichtung) {
    
    this.fahrtrichtung = fahrtrichtung;
    return this;
  }

   /**
   * Get fahrtrichtung
   * @return fahrtrichtung
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_FAHRTRICHTUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public String getFahrtrichtung() {
    return fahrtrichtung;
  }


  @JsonProperty(JSON_PROPERTY_FAHRTRICHTUNG)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setFahrtrichtung(String fahrtrichtung) {
    this.fahrtrichtung = fahrtrichtung;
  }


  public MessquerschnittDto anzahlFahrspuren(Integer anzahlFahrspuren) {
    
    this.anzahlFahrspuren = anzahlFahrspuren;
    return this;
  }

   /**
   * Get anzahlFahrspuren
   * @return anzahlFahrspuren
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANZAHL_FAHRSPUREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAnzahlFahrspuren() {
    return anzahlFahrspuren;
  }


  @JsonProperty(JSON_PROPERTY_ANZAHL_FAHRSPUREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnzahlFahrspuren(Integer anzahlFahrspuren) {
    this.anzahlFahrspuren = anzahlFahrspuren;
  }


  public MessquerschnittDto anzahlDetektoren(Integer anzahlDetektoren) {
    
    this.anzahlDetektoren = anzahlDetektoren;
    return this;
  }

   /**
   * Get anzahlDetektoren
   * @return anzahlDetektoren
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_ANZAHL_DETEKTOREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Integer getAnzahlDetektoren() {
    return anzahlDetektoren;
  }


  @JsonProperty(JSON_PROPERTY_ANZAHL_DETEKTOREN)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setAnzahlDetektoren(Integer anzahlDetektoren) {
    this.anzahlDetektoren = anzahlDetektoren;
  }


  public MessquerschnittDto xcoordinate(Double xcoordinate) {
    
    this.xcoordinate = xcoordinate;
    return this;
  }

   /**
   * Get xcoordinate
   * @return xcoordinate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_XCOORDINATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getXcoordinate() {
    return xcoordinate;
  }


  @JsonProperty(JSON_PROPERTY_XCOORDINATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setXcoordinate(Double xcoordinate) {
    this.xcoordinate = xcoordinate;
  }


  public MessquerschnittDto ycoordinate(Double ycoordinate) {
    
    this.ycoordinate = ycoordinate;
    return this;
  }

   /**
   * Get ycoordinate
   * @return ycoordinate
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_YCOORDINATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public Double getYcoordinate() {
    return ycoordinate;
  }


  @JsonProperty(JSON_PROPERTY_YCOORDINATE)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setYcoordinate(Double ycoordinate) {
    this.ycoordinate = ycoordinate;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MessquerschnittDto messquerschnittDto = (MessquerschnittDto) o;
    return Objects.equals(this.mqId, messquerschnittDto.mqId) &&
        Objects.equals(this.mstId, messquerschnittDto.mstId) &&
        Objects.equals(this.strassenname, messquerschnittDto.strassenname) &&
        Objects.equals(this.lageMessquerschnitt, messquerschnittDto.lageMessquerschnitt) &&
        Objects.equals(this.fahrtrichtung, messquerschnittDto.fahrtrichtung) &&
        Objects.equals(this.anzahlFahrspuren, messquerschnittDto.anzahlFahrspuren) &&
        Objects.equals(this.anzahlDetektoren, messquerschnittDto.anzahlDetektoren) &&
        Objects.equals(this.xcoordinate, messquerschnittDto.xcoordinate) &&
        Objects.equals(this.ycoordinate, messquerschnittDto.ycoordinate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(mqId, mstId, strassenname, lageMessquerschnitt, fahrtrichtung, anzahlFahrspuren, anzahlDetektoren, xcoordinate, ycoordinate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MessquerschnittDto {\n");
    sb.append("    mqId: ").append(toIndentedString(mqId)).append("\n");
    sb.append("    mstId: ").append(toIndentedString(mstId)).append("\n");
    sb.append("    strassenname: ").append(toIndentedString(strassenname)).append("\n");
    sb.append("    lageMessquerschnitt: ").append(toIndentedString(lageMessquerschnitt)).append("\n");
    sb.append("    fahrtrichtung: ").append(toIndentedString(fahrtrichtung)).append("\n");
    sb.append("    anzahlFahrspuren: ").append(toIndentedString(anzahlFahrspuren)).append("\n");
    sb.append("    anzahlDetektoren: ").append(toIndentedString(anzahlDetektoren)).append("\n");
    sb.append("    xcoordinate: ").append(toIndentedString(xcoordinate)).append("\n");
    sb.append("    ycoordinate: ").append(toIndentedString(ycoordinate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

