/*
 * DAVE GEODATA EAI
 * DAVE GEODATA EAI - Service zum Abfragen von Geoinformationen
 *
 * The version of the OpenAPI document: 1.0.0
 * Contact: unbekannt@muenchen.de
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package de.muenchen.dave.geodateneai.gen.model;

import java.util.Objects;
import java.util.Arrays;
import com.fasterxml.jackson.annotation.JsonInclude;
import com.fasterxml.jackson.annotation.JsonProperty;
import com.fasterxml.jackson.annotation.JsonCreator;
import com.fasterxml.jackson.annotation.JsonTypeName;
import com.fasterxml.jackson.annotation.JsonValue;
import java.time.LocalDate;
import java.util.ArrayList;
import java.util.Arrays;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import java.util.Set;
import com.fasterxml.jackson.annotation.JsonPropertyOrder;
import com.fasterxml.jackson.annotation.JsonTypeName;

/**
 * GetMeasurementValuesAggregateRequest
 */
@JsonPropertyOrder({
  GetMeasurementValuesAggregateRequest.JSON_PROPERTY_MESSQUERSCHNITT_IDS_PER_MESSSTELLE,
  GetMeasurementValuesAggregateRequest.JSON_PROPERTY_ZEITRAEUME,
  GetMeasurementValuesAggregateRequest.JSON_PROPERTY_TAGES_TYP
})
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen")
public class GetMeasurementValuesAggregateRequest {
  public static final String JSON_PROPERTY_MESSQUERSCHNITT_IDS_PER_MESSSTELLE = "messquerschnittIdsPerMessstelle";
  private Map<String, Set<String>> messquerschnittIdsPerMessstelle = new HashMap<>();

  public static final String JSON_PROPERTY_ZEITRAEUME = "zeitraeume";
  private List<List<LocalDate>> zeitraeume = new ArrayList<>();

  /**
   * Gets or Sets tagesTyp
   */
  public enum TagesTypEnum {
    WERKTAG_DI_MI_DO("WERKTAG_DI_MI_DO"),
    
    WERKTAG_MO_FR("WERKTAG_MO_FR"),
    
    SAMSTAG("SAMSTAG"),
    
    SONNTAG_FEIERTAG("SONNTAG_FEIERTAG"),
    
    WERKTAG_FERIEN("WERKTAG_FERIEN"),
    
    MO_SO("MO_SO");

    private String value;

    TagesTypEnum(String value) {
      this.value = value;
    }

    @JsonValue
    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    @JsonCreator
    public static TagesTypEnum fromValue(String value) {
      for (TagesTypEnum b : TagesTypEnum.values()) {
        if (b.value.equals(value)) {
          return b;
        }
      }
      throw new IllegalArgumentException("Unexpected value '" + value + "'");
    }
  }

  public static final String JSON_PROPERTY_TAGES_TYP = "tagesTyp";
  private TagesTypEnum tagesTyp;

  public GetMeasurementValuesAggregateRequest() {
  }

  public GetMeasurementValuesAggregateRequest messquerschnittIdsPerMessstelle(Map<String, Set<String>> messquerschnittIdsPerMessstelle) {
    
    this.messquerschnittIdsPerMessstelle = messquerschnittIdsPerMessstelle;
    return this;
  }

  public GetMeasurementValuesAggregateRequest putMessquerschnittIdsPerMessstelleItem(String key, Set<String> messquerschnittIdsPerMessstelleItem) {
    this.messquerschnittIdsPerMessstelle.put(key, messquerschnittIdsPerMessstelleItem);
    return this;
  }

   /**
   * Get messquerschnittIdsPerMessstelle
   * @return messquerschnittIdsPerMessstelle
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_MESSQUERSCHNITT_IDS_PER_MESSSTELLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public Map<String, Set<String>> getMessquerschnittIdsPerMessstelle() {
    return messquerschnittIdsPerMessstelle;
  }


  @JsonProperty(JSON_PROPERTY_MESSQUERSCHNITT_IDS_PER_MESSSTELLE)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setMessquerschnittIdsPerMessstelle(Map<String, Set<String>> messquerschnittIdsPerMessstelle) {
    this.messquerschnittIdsPerMessstelle = messquerschnittIdsPerMessstelle;
  }


  public GetMeasurementValuesAggregateRequest zeitraeume(List<List<LocalDate>> zeitraeume) {
    
    this.zeitraeume = zeitraeume;
    return this;
  }

  public GetMeasurementValuesAggregateRequest addZeitraeumeItem(List<LocalDate> zeitraeumeItem) {
    if (this.zeitraeume == null) {
      this.zeitraeume = new ArrayList<>();
    }
    this.zeitraeume.add(zeitraeumeItem);
    return this;
  }

   /**
   * Get zeitraeume
   * @return zeitraeume
  **/
  @javax.annotation.Nonnull
  @JsonProperty(JSON_PROPERTY_ZEITRAEUME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)

  public List<List<LocalDate>> getZeitraeume() {
    return zeitraeume;
  }


  @JsonProperty(JSON_PROPERTY_ZEITRAEUME)
  @JsonInclude(value = JsonInclude.Include.ALWAYS)
  public void setZeitraeume(List<List<LocalDate>> zeitraeume) {
    this.zeitraeume = zeitraeume;
  }


  public GetMeasurementValuesAggregateRequest tagesTyp(TagesTypEnum tagesTyp) {
    
    this.tagesTyp = tagesTyp;
    return this;
  }

   /**
   * Get tagesTyp
   * @return tagesTyp
  **/
  @javax.annotation.Nullable
  @JsonProperty(JSON_PROPERTY_TAGES_TYP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)

  public TagesTypEnum getTagesTyp() {
    return tagesTyp;
  }


  @JsonProperty(JSON_PROPERTY_TAGES_TYP)
  @JsonInclude(value = JsonInclude.Include.USE_DEFAULTS)
  public void setTagesTyp(TagesTypEnum tagesTyp) {
    this.tagesTyp = tagesTyp;
  }

  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    GetMeasurementValuesAggregateRequest getMeasurementValuesAggregateRequest = (GetMeasurementValuesAggregateRequest) o;
    return Objects.equals(this.messquerschnittIdsPerMessstelle, getMeasurementValuesAggregateRequest.messquerschnittIdsPerMessstelle) &&
        Objects.equals(this.zeitraeume, getMeasurementValuesAggregateRequest.zeitraeume) &&
        Objects.equals(this.tagesTyp, getMeasurementValuesAggregateRequest.tagesTyp);
  }

  @Override
  public int hashCode() {
    return Objects.hash(messquerschnittIdsPerMessstelle, zeitraeume, tagesTyp);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class GetMeasurementValuesAggregateRequest {\n");
    sb.append("    messquerschnittIdsPerMessstelle: ").append(toIndentedString(messquerschnittIdsPerMessstelle)).append("\n");
    sb.append("    zeitraeume: ").append(toIndentedString(zeitraeume)).append("\n");
    sb.append("    tagesTyp: ").append(toIndentedString(tagesTyp)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

